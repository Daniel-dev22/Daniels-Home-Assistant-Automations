alias: Master Bedroom Thermostat Schedule
description: ""
trigger:
  - platform: state
    entity_id:
      - sensor.summer_master_bedroom_thermostat_schedule
      - sensor.winter_master_bedroom_thermostat_schedule
      - script.zone_control_script
  - platform: time_pattern
    minutes: /5
  - platform: template
    value_template: "{{ states('climate.master_bedroom') != 'off' }}"
condition:
  - condition: template
    value_template: >-
      {% set condition_state = states(condition) not in ['unavailable',
      'unknown'] and states('climate.master_bedroom') != 'off' %}  {% set
      zone_control_trigger = trigger.entity_id == 'script.zone_control_script'
      and trigger.to_state.state == 'off'  %} {% set zone_control_state =
      is_state('script.zone_control_script', 'off') %} {% set night_cooling =
      (now() >= today_at('20:00') or now() <= today_at('05:30')) and
      is_state_attr('climate.daniel_s', 'hvac_action', 'cooling') %} {{
      (zone_control_state or zone_control_trigger) and condition_state and not
      night_cooling }}
action:
  - service: script.master_thermostat_schedule
    data:
      input_boolean: input_boolean.master_bedroom_threshold_control
      input_number: input_number.master_bedroom_scheduled_temperature
      thermostat: climate.master_bedroom
      schedule: >-
        {% if states('climate.master_bedroom') == 'cool' %}
        sensor.summer_master_bedroom_thermostat_schedule {% elif
        states('climate.master_bedroom') == 'heat' %}
        sensor.winter_master_bedroom_thermostat_schedule {% endif %}
mode: single
variables:
  condition: >-
    {% if states('climate.master_bedroom') == 'cool' %}
    sensor.summer_master_bedroom_thermostat_schedule  {% elif
    states('climate.master_bedroom') == 'heat' %}
    sensor.winter_master_bedroom_thermostat_schedule  {% endif %}
